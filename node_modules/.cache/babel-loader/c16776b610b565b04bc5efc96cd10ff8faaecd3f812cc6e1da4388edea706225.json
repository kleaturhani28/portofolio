{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitProjects_Klea\\\\Portofolio\\\\src\\\\components\\\\Certifications\\\\CertificationsWorks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CertificationItem from './CertificationItem';\nimport { certificationsData, certificationsNav } from './CertificationsData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CertificationsWorks = () => {\n  _s();\n  const [filter, setFilter] = useState({\n    name: 'all'\n  });\n  const [items, setItems] = useState([]);\n  const [active, setActive] = useState(0);\n  useEffect(() => {\n    if (filter.name === 'all') {\n      setItems(certificationsData);\n    } else {\n      const newItems = certificationsData.filter(c => c.category.toLowerCase() === filter.name.toLowerCase());\n      setItems(newItems);\n    }\n  }, [filter]);\n  const handleClick = (e, index) => {\n    setFilter({\n      name: e.target.textContent.toLowerCase()\n    });\n    setActive(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work_filters\",\n      children: certificationsNav.map((nav, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: e => handleClick(e, index),\n        className: `${active === index ? 'active-work' : ''} work_item`,\n        children: nav.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work_container container grid\",\n      children: items.map(item => /*#__PURE__*/_jsxDEV(CertificationItem, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(CertificationsWorks, \"mDo3sYwvg0bHpXcixTOH5LxcMeU=\");\n_c = CertificationsWorks;\nexport default CertificationsWorks;\nvar _c;\n$RefreshReg$(_c, \"CertificationsWorks\");","map":{"version":3,"names":["React","useState","useEffect","CertificationItem","certificationsData","certificationsNav","jsxDEV","_jsxDEV","CertificationsWorks","_s","filter","setFilter","name","items","setItems","active","setActive","newItems","c","category","toLowerCase","handleClick","e","index","target","textContent","children","className","map","nav","onClick","fileName","_jsxFileName","lineNumber","columnNumber","item","id","_c","$RefreshReg$"],"sources":["C:/GitProjects_Klea/Portofolio/src/components/Certifications/CertificationsWorks.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CertificationItem from './CertificationItem';\nimport { certificationsData, certificationsNav } from './CertificationsData';\n\nconst CertificationsWorks = () => {\n  const [filter, setFilter] = useState({ name: 'all' });\n  const [items, setItems] = useState([]);\n  const [active, setActive] = useState(0);\n\n  useEffect(() => {\n    if (filter.name === 'all') {\n      setItems(certificationsData);\n    } else {\n      const newItems = certificationsData.filter((c) =>\n        c.category.toLowerCase() === filter.name.toLowerCase()\n      );\n      setItems(newItems);\n    }\n  }, [filter]);\n\n  const handleClick = (e, index) => {\n    setFilter({ name: e.target.textContent.toLowerCase() });\n    setActive(index);\n  };\n\n  return (\n    <div>\n      <div className=\"work_filters\">\n        {certificationsNav.map((nav, index) => (\n          <span\n            key={index}\n            onClick={(e) => handleClick(e, index)}\n            className={`${active === index ? 'active-work' : ''} work_item`}\n          >\n            {nav.name}\n          </span>\n        ))}\n      </div>\n\n      <div className=\"work_container container grid\">\n        {items.map((item) => (\n          <CertificationItem item={item} key={item.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CertificationsWorks;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,SAASC,kBAAkB,EAAEC,iBAAiB,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC;IAAEW,IAAI,EAAE;EAAM,CAAC,CAAC;EACrD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAEvCC,SAAS,CAAC,MAAM;IACd,IAAIQ,MAAM,CAACE,IAAI,KAAK,KAAK,EAAE;MACzBE,QAAQ,CAACV,kBAAkB,CAAC;IAC9B,CAAC,MAAM;MACL,MAAMa,QAAQ,GAAGb,kBAAkB,CAACM,MAAM,CAAEQ,CAAC,IAC3CA,CAAC,CAACC,QAAQ,CAACC,WAAW,CAAC,CAAC,KAAKV,MAAM,CAACE,IAAI,CAACQ,WAAW,CAAC,CACvD,CAAC;MACDN,QAAQ,CAACG,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZ,MAAMW,WAAW,GAAGA,CAACC,CAAC,EAAEC,KAAK,KAAK;IAChCZ,SAAS,CAAC;MAAEC,IAAI,EAAEU,CAAC,CAACE,MAAM,CAACC,WAAW,CAACL,WAAW,CAAC;IAAE,CAAC,CAAC;IACvDJ,SAAS,CAACO,KAAK,CAAC;EAClB,CAAC;EAED,oBACEhB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAKoB,SAAS,EAAC,cAAc;MAAAD,QAAA,EAC1BrB,iBAAiB,CAACuB,GAAG,CAAC,CAACC,GAAG,EAAEN,KAAK,kBAChChB,OAAA;QAEEuB,OAAO,EAAGR,CAAC,IAAKD,WAAW,CAACC,CAAC,EAAEC,KAAK,CAAE;QACtCI,SAAS,EAAE,GAAGZ,MAAM,KAAKQ,KAAK,GAAG,aAAa,GAAG,EAAE,YAAa;QAAAG,QAAA,EAE/DG,GAAG,CAACjB;MAAI,GAJJW,KAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKN,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN3B,OAAA;MAAKoB,SAAS,EAAC,+BAA+B;MAAAD,QAAA,EAC3Cb,KAAK,CAACe,GAAG,CAAEO,IAAI,iBACd5B,OAAA,CAACJ,iBAAiB;QAACgC,IAAI,EAAEA;MAAK,GAAMA,IAAI,CAACC,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CA1CID,mBAAmB;AAAA6B,EAAA,GAAnB7B,mBAAmB;AA4CzB,eAAeA,mBAAmB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}